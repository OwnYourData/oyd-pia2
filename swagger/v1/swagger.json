{
  "swagger": "2.0",
  "info": {
    "title": "OwnYourData Data Vault API",
    "version": "v1",
    "description": "The data vault is the central element for securley storing personal data with OwnYourData.\n \n Further information:\n - learn more about the Data Vault at https://data-vault.eu\n - view other [OwnYourData Service API's](https://api-docs.ownyourdata.eu)",
    "contact": {
      "email": "office@ownyourdata.eu"
    },
    "license": {
      "name": "MIT License",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "paths": {
    "/oauth/token": {
      "post": {
        "summary": "request token",
        "tags": [
          "Authorization"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "401": {
            "description": "invalid"
          }
        }
      }
    },
    "/oauth/token/info": {
      "get": {
        "summary": "show token information",
        "tags": [
          "Authorization"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Authorization",
            "required": true,
            "description": "Client token"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "401": {
            "description": "invalid request"
          }
        }
      }
    },
    "/oauth/revoke": {
      "post": {
        "summary": "revoke token",
        "tags": [
          "Authorization"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/oauth/applications": {
      "post": {
        "summary": "create plugin",
        "tags": [
          "Authorization"
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Authorization",
            "required": true,
            "description": "Client token"
          },
          {
            "in": "body",
            "name": "input",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "name"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "401": {
            "description": "invalid token"
          }
        }
      }
    },
    "/oauth/applications/{id}": {
      "delete": {
        "summary": "remove plugin",
        "tags": [
          "Authorization"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Authorization",
            "required": true,
            "description": "Client token"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "'id' of account",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "401": {
            "description": "invalid token"
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/api/repos/{repo_id}/items": {
      "get": {
        "summary": "read all records in repo",
        "tags": [
          "Read/Write Data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "repo_id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "403": {
            "description": "Permission denied"
          }
        }
      },
      "post": {
        "summary": "create new record in repo",
        "tags": [
          "Read/Write Data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "repo_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "input",
            "in": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "403": {
            "description": "Permission denied"
          }
        }
      }
    },
    "/api/data": {
      "post": {
        "summary": "create new record",
        "tags": [
          "Read/Write Data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "403": {
            "description": "Permission denied"
          }
        }
      }
    },
    "/api/items/{item_id}/details": {
      "get": {
        "summary": "read specific record",
        "tags": [
          "Read/Write Data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "403": {
            "description": "Permission denied"
          }
        }
      }
    },
    "/api/data?id={item_id}": {
      "get": {
        "summary": "read specific record by querying record ID",
        "tags": [
          "Read/Write Data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "403": {
            "description": "Permission denied"
          }
        }
      }
    },
    "/api/data?dri={dri}": {
      "get": {
        "summary": "read specific record by querying DRI",
        "tags": [
          "Read/Write Data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "dri",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "403": {
            "description": "Permission denied"
          }
        }
      }
    },
    "/api/data?schema={schema_dri}": {
      "get": {
        "summary": "read all records with a given schema DRI",
        "tags": [
          "Read/Write Data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "schema_dri",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "403": {
            "description": "Permission denied"
          }
        }
      }
    },
    "/api/repos/{repo_id}/items/{item_id}": {
      "put": {
        "summary": "update specific record in repo",
        "tags": [
          "Read/Write Data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "repo_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "item_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "input",
            "in": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "403": {
            "description": "Permission denied"
          }
        }
      },
      "delete": {
        "summary": "delete specific record in repo",
        "tags": [
          "Read/Write Data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "repo_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "item_id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "403": {
            "description": "Permission denied"
          }
        }
      }
    },
    "/api/items/merkle": {
      "get": {
        "summary": "list all records not yet archived in the blockchain",
        "tags": [
          "Blockchain Verification"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/api/items/{item_id}": {
      "put": {
        "summary": "update specific record in repo with blockchain reference",
        "tags": [
          "Blockchain Verification"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "item_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "input",
            "in": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "404": {
            "description": "not found"
          },
          "500": {
            "description": "error"
          }
        }
      }
    },
    "/api/merkles/create": {
      "post": {
        "summary": "create new merkle record",
        "tags": [
          "Blockchain Verification"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "500": {
            "description": "error"
          }
        }
      }
    },
    "/api/merkles/{id}": {
      "put": {
        "summary": "update merkle record",
        "tags": [
          "Blockchain Verification"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "input",
            "in": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "404": {
            "description": "not found"
          },
          "500": {
            "description": "error"
          }
        }
      }
    },
    "/api/plugins/{plugin_id}/perms": {
      "get": {
        "summary": "list all permission for the specific plugin",
        "tags": [
          "Permission Management"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "plugin_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "404": {
            "description": "not found"
          },
          "500": {
            "description": "error"
          }
        }
      },
      "post": {
        "summary": "create a new permission for the specified plugin",
        "tags": [
          "Permission Management"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "plugin_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "input",
            "in": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "404": {
            "description": "not found"
          },
          "500": {
            "description": "error"
          }
        }
      }
    },
    "/api/plugins/{plugin_id}/perms/{id}": {
      "put": {
        "summary": "update specified permission for the specified plugin",
        "tags": [
          "Permission Management"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "plugin_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "input",
            "in": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "404": {
            "description": "not found"
          },
          "500": {
            "description": "error"
          }
        }
      },
      "delete": {
        "summary": "delete specified permission for the specified plugin",
        "tags": [
          "Permission Management"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "plugin_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "404": {
            "description": "not found"
          },
          "500": {
            "description": "error"
          }
        }
      }
    },
    "/api/plugins/{plugin_id}/perms_destroy": {
      "delete": {
        "summary": "delete all permissions for the specified plugin",
        "tags": [
          "Permission Management"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "plugin_id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "404": {
            "description": "not found"
          },
          "500": {
            "description": "error"
          }
        }
      }
    },
    "/api/plugins/index": {
      "get": {
        "summary": "get list of installed plugins for current user",
        "tags": [
          "Plugins"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/api/plugins/create": {
      "post": {
        "summary": "create new plugin",
        "tags": [
          "Plugins"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "error"
          }
        }
      }
    },
    "/api/plugins/{plugin_id}": {
      "get": {
        "summary": "get plugin information",
        "tags": [
          "Plugins"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "plugin_id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "403": {
            "description": "permission denied"
          }
        }
      },
      "put": {
        "summary": "update plugin information",
        "tags": [
          "Plugins"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "plugin_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "input",
            "in": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "403": {
            "description": "permission denied"
          }
        }
      },
      "delete": {
        "summary": "delete plugin",
        "tags": [
          "Plugins"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "plugin_id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "403": {
            "description": "permission denied"
          }
        }
      }
    },
    "/api/users/show": {
      "get": {
        "summary": "get information from current user",
        "tags": [
          "User Management"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "422": {
            "description": "invalid request"
          }
        }
      }
    },
    "/api/users/create": {
      "post": {
        "summary": "create new user",
        "tags": [
          "User Management"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "error"
          }
        }
      }
    },
    "/api/users/update": {
      "put": {
        "summary": "update current user information",
        "tags": [
          "User Management"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "input",
            "in": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "422": {
            "description": "invalid request"
          },
          "500": {
            "description": "error"
          }
        }
      }
    },
    "/api/users/delete": {
      "delete": {
        "summary": "delete current user",
        "tags": [
          "User Management"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "500": {
            "description": "error"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "description": "Authorization token",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}